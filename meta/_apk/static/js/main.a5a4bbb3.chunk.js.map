{"version":3,"sources":["components/alcohol-icon.tsx","components/alcohol-icons.tsx","const/styles.ts","components/search-item.tsx","components/search-items.tsx","endpoints.ts","components/filter.tsx","components/search-result.tsx","components/search.tsx","icons.ts","serviceWorker.js","index.tsx","App.tsx"],"names":["Icons","category","match","icon","color","AlcoholIcon","_ref","product","find","_ref2","test","toLowerCase","console","log","Object","entries","react_default","a","createElement","Fragment","index_es","style","Container","styled","div","_templateObject","Styles","perc2color","perc","r","g","Math","round","b","toString","slice","Img","search_item_templateObject","Line","_templateObject2","Description","_templateObject3","className","map","i","alcohol_icon_AlcoholIcon","key","_templateObject4","Unit","span","_templateObject5","Alcohol","_templateObject6","Price","_templateObject7","Volume","_templateObject8","Name","_templateObject9","Apk","_templateObject10","Card","_templateObject11","SearchItem","src","image_urls","alt","search_item_Icons","backgroundColor","concat","apk","toFixed","product_name_bold","product_name_thin","alcohol","volume","price","search_items_templateObject","SearchItems","result","search_items_Container","prod","search_item_SearchItem","API","Filter","setQuery","_useState","useState","_useState2","slicedToArray","meta","metaUrl","useEffect","fetch","then","json","res","SearchResult","setIsLoading","_useState3","_useState4","setResult","_useState5","_useState6","query","productsUrl","filter_Filter","search_items_SearchItems","Search","props","search_result_SearchResult","library","add","faBeer","faGlassWhiskey","faWineBottle","faWineGlass","faGlassMartiniAlt","faCocktail","faDrumSteelpan","Boolean","window","location","hostname","ReactDOM","render","search_Search","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5a4bbb3.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Product } from '../models/common';\n\ninterface AlcoholIconProps {\n  product: Product;\n  category: string;\n};\n\nconst Icons = {\n  'category': [{\n    match: /öl/,\n    icon: 'beer',\n    color: '#eac944'\n  },{\n    match: /röda viner/,\n    icon: 'wine-glass',\n    color: '#de7474'\n  },{\n    match: /vita viner/,\n    icon: 'wine-glass',\n    color: '#999'\n  },{\n    match: /mousserande viner/,\n    icon: 'wine-glass',\n    color: '#ff00ff'\n  },{\n    match: /roséviner/,\n    icon: 'wine-glass',\n    color: '#ea62a5'\n  },{\n    match: /sprit/,\n    icon: 'glass-whiskey',\n    color: '#c37a04'\n  },{\n    match: /aperitif & dessert/,\n    icon: 'cocktail',\n    color: '#6d6dde'\n  }]\n};\n\nexport const AlcoholIcon = ({product, category}: AlcoholIconProps) => {\n  const icon = (Icons[category] || []).find(({ match }) => match.test((product[category] || '').toLowerCase()));\n  console.log('icon', icon, Object.entries(Icons[category] || {}), product[category]);\n\n  return (\n    <>\n      {\n        icon\n          ? <FontAwesomeIcon style={{\n            color: icon.color || '#000000'\n          }} icon={icon.icon} />\n          : <></>\n      }\n    </>\n  );\n}","import React from 'react';\nimport { AlcoholIcon } from './alcohol-icon';\nimport styled from 'styled-components';\nimport { Product } from '../models/common';\n\ninterface AlcoholIconsProps {\n  product: Product;\n  className?: string;\n};\n\nconst Container = styled.div``;\n\nexport const AlcoholIcons = ({ product, className }: AlcoholIconsProps) => {\n  return (\n    <Container className={className}>\n      {\n        ['category'].map((category, i) => (\n          <AlcoholIcon key={i} product={product} category={category} />\n        ))\n      }\n    </Container>\n  );\n}","export const Styles = {\n  BoxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);'\n};","import React from 'react';\nimport { AlcoholIcons } from './alcohol-icons';\nimport styled from 'styled-components';\nimport { Product } from '../models/common';\nimport { Styles } from '../const/styles';\n\nconst perc2color = perc => {\n\tvar r, g, b = 0;\n\tif(perc < 50) {\n\t\tr = 255;\n\t\tg = Math.round(5.1 * perc);\n\t}\n\telse {\n\t\tg = 255;\n\t\tr = Math.round(510 - 5.10 * perc);\n\t}\n\tvar h = r * 0x10000 + g * 0x100 + b * 0x1;\n\treturn '#' + ('000000' + h.toString(16)).slice(-6);\n}\n\ninterface SearchItemProps {\n  product: Product;\n};\n\nconst Img = styled.div`\n  max-height: 100px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  box-shadow: ${Styles.BoxShadow};\n  padding: 10px;\n  img {\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 150px;\n    min-height: 90px;\n  }\n`;\n\nconst Line = styled.div`\n  display: flex;\n  justify-content: space-between;\n  color: #444;\n`;\n\nconst Description = styled.div`\n  padding: 10px;\n  span:first-of-type {\n    font-weight: 800;\n    font-size: 16px;\n    + span:not(:empty) {\n      font-size: 14px;\n      color: #777;\n      &:before {\n        content: ' - ';\n      }\n    }\n  }\n`;\n\nconst Icons = styled(AlcoholIcons)`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n\nconst Unit = styled.span`\n  &:after {\n    font-size: 12px;\n    margin-left: 2px;\n    color: #777;\n  }\n`;\n\nconst Alcohol = styled(Unit)`\n  &:after {\n    content: '%';\n  }\n`;\n\nconst Price = styled(Unit)`\n  &:after {\n    content: ':-';\n  }\n`;\n\nconst Volume = styled(Unit)`\n  &:after {\n    content: 'cl'\n  }\n`;\n\nconst Name = styled.div`\n  padding-right: 5px;\n  padding-bottom: 5px;\n`;\n\nconst Apk = styled(Unit)`\n  display: block;\n  position: absolute;\n  top: 3px;\n  left: 3px;\n  padding: 5px;\n  background-color: white;\n  border-radius: 3px;\n  box-shadow: ${Styles.BoxShadow};\n  font-weight: 800;\n  color: #fafafa;\n  &:after {\n    content: 'apk';\n    color: #fafafa;\n  }\n`;\n\nconst Card = styled.div`\n  box-shadow: ${Styles.BoxShadow};\n  margin: 10px;\n  max-width: 300px;\n  overflow: hidden;\n  position: relative;\n  ${Img} {\n    opacity: .8;\n    transition: opacity .25s ease-in-out;\n  }\n  &:hover {\n    ${Img} {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const SearchItem = ({ product }: SearchItemProps) => {\n  return (\n    <Card>\n      <Img>\n        <img src={product.image_urls} alt=\"\"/>\n      </Img>\n      <Description>\n        <Icons product={product} />\n        <Apk style={{backgroundColor: `${perc2color( (1 - (+(product.apk || 0)) / 300) * 100 )}cc`}}>{(+product.apk).toFixed(1)}</Apk>\n        <Line>\n          <Name>\n            <span>{product.product_name_bold}</span>\n            <span>{product.product_name_thin}</span>\n          </Name>\n          <div>\n            <Alcohol>{product.alcohol}</Alcohol>\n          </div>\n        </Line>\n        <Line>\n          <div>\n            <Volume>{(+(product.volume || 0)).toFixed(0)}</Volume>\n          </div>\n          <div>\n            <Price>{product.price}</Price>\n          </div>\n        </Line>\n      </Description>\n    </Card>\n  )\n};","import React from 'react';\nimport { SearchItem } from './search-item';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n`;\n\nexport const SearchItems = ({ result }) => {\n  return (\n    <Container>\n      {\n        result.prod.map((product, i) => <SearchItem key={i} product={product} />)\n      }\n    </Container>\n  );\n}","export const API = 'https://dabdabdab.herokuapp.com/api';\n// export const API = 'http://localhost:4200/api';","import React, { useState, useEffect } from 'react';\nimport { API } from '../endpoints';\n\nexport const Filter = ({ setQuery }) => {\n  const [meta, setMeta] = useState(null);\n\n  const metaUrl = `${API}/meta`;\n\n  useEffect(() => {\n    fetch(metaUrl)\n      .then(r => r.json())\n      .then(res => {\n        console.log(res);\n        // setMeta(Object\n        //   .entries(res.prod)\n        //   .reduce((a, [key, value]) => ({\n        //     ...a, [key]: Object\n        //       .entries(value)\n        //       .reduce((a, [key, count]) => ({ ...a, [key]: {\n        //         count,\n        //         active: false\n        //       }}), {})\n        //   }), {}));\n      });\n  }, [metaUrl]);\n\n  if(!meta) return (\n    <></>\n  );\n\n  console.log(meta);\n\n  const filterIds = [{\n    id: 'category',\n    label: 'Category'\n  }];\n\n  return (<></>);\n\n  // return (\n  //   <>\n  //     {\n  //       filterIds.map(({id, label}, i) => (\n  //         <div key={i}>\n  //           <h3>{label}</h3>\n  //           {\n  //             // Object.entries(meta[id]).map((label, { count, active }))\n  //           }\n  //         </div>\n  //       ))\n  //       // Object.entries(meta.prod.category).map(([category, count], i) => (\n  //       //   <label key={i}>\n  //       //     <input type=\"checkbox\" onChange={}/>\n  //       //     <span>{category} ({count})</span>\n  //       //   </label>\n  //       // ))\n  //     }\n  //   </>\n  // );\n};","import React, { useState, useEffect } from 'react';\nimport { SearchItems } from \"./search-items\";\nimport { Filter } from './filter';\nimport { API } from '../endpoints';\nimport { ProductResult } from '../models/common';\n\nexport const SearchResult = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [result, setResult] = useState<ProductResult | null>();\n  const [query, setQuery] = useState<string>('');\n\n  const productsUrl = `${API}/products?${query}`;\n\n  useEffect(() => {\n    fetch(productsUrl)\n      .then(r => r.json())\n      .then(res => {\n        console.log(res);\n        setResult(res);\n        setIsLoading(false);\n      });\n  }, [productsUrl]);\n\n  return (\n    <>\n    <Filter setQuery={setQuery} />\n    {\n      result\n        ? <SearchItems result={result} />\n        : <div />\n    }\n    </>\n  );\n};","import React from 'react';\nimport { SearchResult } from \"./search-result\";\n\nexport const Search = props => {\n  return (\n    <>\n      <SearchResult />\n    </>\n  );\n};","import { library } from '@fortawesome/fontawesome-svg-core'\n\nimport {\n  faBeer,\n  faGlassWhiskey,\n  faWineBottle,\n  faWineGlass,\n  faGlassMartiniAlt,\n  faCocktail,\n  faDrumSteelpan,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faBeer,\n  faGlassWhiskey,\n  faWineBottle,\n  faWineGlass,\n  faGlassMartiniAlt,\n  faCocktail,\n  faDrumSteelpan\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Search } from './components/search';\nimport './icons';\n\nexport const App = props => {\n  return (\n    <>\n      <Search />\n    </>\n  );\n}"],"sourceRoot":""}