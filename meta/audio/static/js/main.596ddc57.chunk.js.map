{"version":3,"sources":["components/style/Box.tsx","data/Notes.ts","components/style/Geometry.tsx","components/elements/EQ.tsx","components/elements/LFO.tsx","components/Knob.tsx","components/elements/Compressor.tsx","components/elements/Reverb.tsx","components/Channel.tsx","components/elements/ES1.tsx","components/Display.tsx","components/Midi.tsx","data/Bindings.ts","components/Piano.tsx","components/Track.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["start","stop","Box","styled","div","octaveRange","Array","fill","map","_","i","val","semitoneOffsets","Notes","Object","entries","reduce","ob","range","multiplier","note","semitones","Math","pow","reverse","filter","a","v","findIndex","k","Row","Button","button","dbToY","db","pixelsPerDb","height","BiquadTypes","getLogScale","factor","min","max","nyquist","noctaves","log","LN2","getCutoff","audio","sampleRate","LFOContext","React","createContext","BehaviorSubject","getGain","gain","LFO","lfo$","useContext","useState","isMoving","setIsMoving","pos","setPos","useKnob","frequency","frequencyKnob","step","gainKnob","form","setForm","OscillatorNode","lfo","GainNode","lfoGain","useEffect","type","setValueAtTime","currentTime","connect","cancelScheduledValues","disconnect","forEach","tryTo","onMouseDown","useCallback","e","hasMoved","clientX","clientY","onMouseMove","next","preventDefault","position","document","addEventListener","onMouseUp","removeEventListener","style","transform","value","onChange","target","toFixed","log10","collision","rect","x","width","y","DroppableKnob","active","initialValue","options","setValue","setActive","lfos","setLfos","knobRef","useRef","bind","sub","subscribe","current","knob","getBoundingClientRect","remove","unsubscribe","ref","Knob","stopPropagation","screenX","screenY","change","abs","updated","round","rotation","effectiveRange","KnobWrapper","LFOCount","LFOBlob","key","onClick","StyledKnob","CompressorReductionStyled","CompressorReduction","compressor","canvasRef","ctx","getContext","clearRect","font","play","render","requestAnimationFrame","bar","reduction","fillStyle","fillRect","Impulses","slice","length","ActionType","getLocal","res","localStorage","getItem","JSON","parse","undefined","Elements","serialized$","initial","out","commands$","Observable","finalGain","mode","setMode","release","releaseKnob","attack","attackKnob","volume","volumeKnob","glide","glideKnob","voices","voicesKnob","detune","detuneKnob","playing","velocity","console","env","setTargetAtTime","linearRampToValueAtTime","setTimeout","osc","createGain","pan","createStereoPanner","createOscillator","everyPlaying","f","values","serializedData","input","enabled","setEnabled","DynamicsCompressorNode","threshold","thresholdKnob","knee","kneeKnob","ratio","ratioKnob","checked","ConvolverNode","convolver","impulse","setImpulse","currentSound","setCurrentSound","player","fetch","then","r","arrayBuffer","decodeAudioData","buf","buffer","playSound","blob","Blob","url","window","URL","createObjectURL","src","display","BiquadFilterNode","biquad","Q","QKnob","biquadType","setBiquadType","canvas","canvasContext","draw","strokeStyle","lineWidth","beginPath","moveTo","frequencyHz","Float32Array","magResponse","phaseResponse","getFrequencyResponse","response","dbResponse","LN10","lineTo","stroke","octave","unit","textAlign","strokeText","dbScale","drawCurve","serializeReducer","state","action","CHANGE_SETTINGS","find","vsts","id","settings","payload","CHANGE_WRAPPER_SETTINGS","wrapperSettings","initialSerialized","name","Channel","setVsts","lfoContext","useReducer","serialized","dispatch","firstTime","setFirstTime","staticSerialized","setItem","stringify","prevNode","sort","b","Element","node","element","wrapperSerialized$","wrapper","open","pipe","j","merge","wrapperSub","Provider","PluginElement","children","setOpen","offset","onPluginClick","onCloseClick","left","top","PluginElementOpened","PluginElementBar","PluginElementBarClose","PluginListElementStyled","DisplayStyled","WaveDisplay","AnalyserNode","analyser","setAnalyser","WIDTH","HEIGHT","fftSize","bufferLength","dataArray","Uint8Array","drawAlt","getByteTimeDomainData","sliceWidth","FrequencyDisplay","bufferLengthAlt","frequencyBinCount","dataArrayAlt","getByteFrequencyData","barHeight","barWidth","Midi","error","setError","access","setAccess","navigator","requestMIDIAccess","useMidiAccess","man","setMan","setName","interfaces","setInterfaces","update","elements","inputs","push","onstatechange","port","manufacturer","onmidimessage","data","command","noteOff","Bindings","'","Piano","onKeyDown","repeat","toLowerCase","onKeyUp","Track","isRecording","setIsRecording","isPlaying","setIsPlaying","recording","subscription","setSubscription","timeouts","setTimeouts","onRecord","time","Date","now","onPlay","clearTimeout","recordStyle","background","Container","p","color","DemoCanvasWidget","props","App","AudioContext","createAnalyser","version","clear","destination","Subject","margin","location","reload","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.596ddc57.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Box = styled.div`\n    margin: 15px;\n    padding: 15px;\n    border-radius: 3px;\n    background: rgba(150, 150, 150, .5);\n    display: inline-block;\n    color: #ddd;\n\n    h1, h2, h3 {\n        margin: 0;\n    }\n\n    label {\n        > span {\n            display: block;\n            color: #eee;\n            padding: 5px;\n        }\n        > input, select {\n            margin-bottom: 15px;\n        }\n    }\n`;","// export const Notes = {\n//     'C0': 16.35,\n//     'C#0': 17.32,\n//     'Db0': 17.32,\n//     'D0': 18.35,\n//     'D#0': 19.45,\n//     'Eb0': 19.45,\n//     'E0': 20.60,\n//     'F0': 21.83,\n//     'F#0': 23.12,\n//     'Gb0': 23.12,\n//     'G0': 24.50,\n//     'G#0': 25.96,\n//     'Ab0': 25.96,\n//     'A0': 27.50,\n//     'A#0': 29.14,\n//     'Bb0': 29.14,\n//     'B0': 30.87,\n//     'C1': 32.70,\n//     'C#1': 34.65,\n//     'Db1': 34.65,\n//     'D1': 36.71,\n//     'D#1': 38.89,\n//     'Eb1': 38.89,\n//     'E1': 41.20,\n//     'F1': 43.65,\n//     'F#1': 46.25,\n//     'Gb1': 46.25,\n//     'G1': 49.00,\n//     'G#1': 51.91,\n//     'Ab1': 51.91,\n//     'A1': 55.00,\n//     'A#1': 58.27,\n//     'Bb1': 58.27,\n//     'B1': 61.74,\n//     'C2': 65.41,\n//     'C#2': 69.30,\n//     'Db2': 69.30,\n//     'D2': 73.42,\n//     'D#2': 77.78,\n//     'Eb2': 77.78,\n//     'E2': 82.41,\n//     'F2': 87.31,\n//     'F#2': 92.50,\n//     'Gb2': 92.50,\n//     'G2': 98.00,\n//     'G#2': 103.83,\n//     'Ab2': 103.83,\n//     'A2': 110.00,\n//     'A#2': 116.54,\n//     'Bb2': 116.54,\n//     'B2': 123.47,\n//     'C3': 130.81,\n//     'C#3': 138.59,\n//     'Db3': 138.59,\n//     'D3': 146.83,\n//     'D#3': 155.56,\n//     'Eb3': 155.56,\n//     'E3': 164.81,\n//     'F3': 174.61,\n//     'F#3': 185.00,\n//     'Gb3': 185.00,\n//     'G3': 196.00,\n//     'G#3': 207.65,\n//     'Ab3': 207.65,\n//     'A3': 220.00,\n//     'A#3': 233.08,\n//     'Bb3': 233.08,\n//     'B3': 246.94,\n//     'C4': 261.63,\n//     'C#4': 277.18,\n//     'Db4': 277.18,\n//     'D4': 293.66,\n//     'D#4': 311.13,\n//     'Eb4': 311.13,\n//     'E4': 329.63,\n//     'F4': 349.23,\n//     'F#4': 369.99,\n//     'Gb4': 369.99,\n//     'G4': 392.00,\n//     'G#4': 415.30,\n//     'Ab4': 415.30,\n//     'A4': 440.00,\n//     'A#4': 466.16,\n//     'Bb4': 466.16,\n//     'B4': 493.88,\n//     'C5': 523.25,\n//     'C#5': 554.37,\n//     'Db5': 554.37,\n//     'D5': 587.33,\n//     'D#5': 622.25,\n//     'Eb5': 622.25,\n//     'E5': 659.26,\n//     'F5': 698.46,\n//     'F#5': 739.99,\n//     'Gb5': 739.99,\n//     'G5': 783.99,\n//     'G#5': 830.61,\n//     'Ab5': 830.61,\n//     'A5': 880.00,\n//     'A#5': 932.33,\n//     'Bb5': 932.33,\n//     'B5': 987.77,\n//     'C6': 1046.50,\n//     'C#6': 1108.73,\n//     'Db6': 1108.73,\n//     'D6': 1174.66,\n//     'D#6': 1244.51,\n//     'Eb6': 1244.51,\n//     'E6': 1318.51,\n//     'F6': 1396.91,\n//     'F#6': 1479.98,\n//     'Gb6': 1479.98,\n//     'G6': 1567.98,\n//     'G#6': 1661.22,\n//     'Ab6': 1661.22,\n//     'A6': 1760.00,\n//     'A#6': 1864.66,\n//     'Bb6': 1864.66,\n//     'B6': 1975.53,\n//     'C7': 2093.00,\n//     'C#7': 2217.46,\n//     'Db7': 2217.46,\n//     'D7': 2349.32,\n//     'D#7': 2489.02,\n//     'Eb7': 2489.02,\n//     'E7': 2637.02,\n//     'F7': 2793.83,\n//     'F#7': 2959.96,\n//     'Gb7': 2959.96,\n//     'G7': 3135.96,\n//     'G#7': 3322.44,\n//     'Ab7': 3322.44,\n//     'A7': 3520.00,\n//     'A#7': 3729.31,\n//     'Bb7': 3729.31,\n//     'B7': 3951.07,\n//     'C8': 4186.01\n// };\n\n// generic range function\nconst range = (start: number, stop: number) => Array(stop - start + 1).fill(0).map((_, i) => start + i);\n\n// frequency of A4\nconst A = 440;\n\n// the octave range - here 0 - 8\nconst octaveRange = range(0, 8).map(val => [val, val - 4]);\n\n// semitone offset\nconst semitoneOffsets: [string, number][] = [\n    [\"C\", -9],\n    [\"C#\", -8],\n    [\"Db\", -8],\n    [\"D\", -7],\n    [\"D#\", -6],\n    [\"Eb\", -6],\n    [\"E\", -5],\n    [\"F\", -4],\n    [\"F#\", -3],\n    [\"Gb\", -3],\n    [\"G\", -2],\n    [\"G#\", -1],\n    [\"Ab\", -1],\n    [\"A\", 0],\n    [\"A#\", 1],\n    [\"Bb\", 1],\n    [\"B\", 2],\n];\n\n// map notes to frequencies\nexport const Notes: {\n    [note: string]: number\n} = Object.entries(octaveRange.reduce((ob, [range, multiplier]) => semitoneOffsets.reduce((ob, [note, semitones]) => ({\n    ...ob,\n    [note + range]: A * Math.pow(2, (semitones + (multiplier * 12)) / 12),\n}), ob), {}))\n    .reverse()\n    .filter(([k, v], i, a) => a.findIndex(([,j]) => j === v) === i)\n    .reverse()\n    .reduce((a, [k, v]) => ({...a, [k]: v}), {});","import styled from \"styled-components\";\n\nexport const Row = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n`;\n\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Button = styled.button`\n    padding: 10px 20px;\n    border: 1px solid black;\n    border-radius: 3px;\n    background: #8a8a8a;\n    color: #efefef;\n    font-weight: 800;\n    font-size: 16px;\n`;","import React, { useState, useRef, useEffect } from 'react';\nimport { ConnectableNode, tryTo } from '../Channel';\nimport { useKnob } from '../Knob';\nimport { Box } from '../style/Box';\nimport { Row } from '../style/Geometry';\n\nconst dbToY = (db: number, pixelsPerDb: number, height: number) => {\n    var y = (0.5 * height) - pixelsPerDb * db;\n    return y;\n};\n\nconst drawCurve = (audio: AudioContext, filter: BiquadFilterNode, canvas: HTMLCanvasElement) => {\n    const canvasContext = canvas.getContext('2d');\n    if(!canvasContext) return;\n\n    const curveColor = \"rgb(224,27,106)\";\n    const gridColor = \"rgb(100,100,100)\";\n    const textColor = \"rgb(81,127,207)\";\n    const dbScale = 60;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    let play = true;\n\n    const draw = () => {\n        if(!play) return;\n        requestAnimationFrame(draw);\n\n        canvasContext.clearRect(0, 0, width, height);\n        canvasContext.fillRect(0, 0, width, height);\n\n        canvasContext.strokeStyle = curveColor;\n        canvasContext.lineWidth = 3;\n        canvasContext.beginPath();\n        canvasContext.moveTo(0, 0);\n\n        const pixelsPerDb = (0.5 * height) / dbScale;\n        \n        var noctaves = 11;\n        \n        var frequencyHz = new Float32Array(width);\n        var magResponse = new Float32Array(width);\n        var phaseResponse = new Float32Array(width);\n        var nyquist = 0.5 * audio.sampleRate;\n        // First get response.\n        for (var i = 0; i < width; ++i) {\n            var f = i / width;\n            \n            // Convert to log frequency scale (octaves).\n            f = nyquist * Math.pow(2.0, noctaves * (f - 1.0));\n            \n            frequencyHz[i] = f;\n        }\n\n        filter.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        \n        for (i = 0; i < width; ++i) {\n            f = magResponse[i];\n            var response = magResponse[i];\n            var dbResponse = 20.0 * Math.log(response) / Math.LN10;\n            \n            var x = i;\n            var y = dbToY(dbResponse, pixelsPerDb, height);\n            \n            if ( i === 0 )\n                canvasContext.moveTo(x,y);\n            else\n                canvasContext.lineTo(x, y);\n        }\n        canvasContext.stroke();\n        canvasContext.beginPath();\n        canvasContext.lineWidth = 1;\n        canvasContext.strokeStyle = gridColor;\n        \n        // Draw frequency scale.\n        for (var octave = 0; octave <= noctaves; octave++) {\n            x = octave * width / noctaves;\n            \n            canvasContext.strokeStyle = gridColor;\n            canvasContext.moveTo(x, 30);\n            canvasContext.lineTo(x, height);\n            canvasContext.stroke();\n\n            f = nyquist * Math.pow(2.0, octave - noctaves);\n            var value = f.toFixed(0);\n            var unit = 'Hz';\n            if (f > 1000) {\n            unit = 'KHz';\n            value = (f/1000).toFixed(1);\n            }\n            canvasContext.textAlign = \"center\";\n            canvasContext.strokeStyle = textColor;\n            canvasContext.strokeText(value + unit, x, 20);\n        }\n\n        // Draw 0dB line.\n        canvasContext.beginPath();\n        canvasContext.moveTo(0, 0.5 * height);\n        canvasContext.lineTo(width, 0.5 * height);\n        canvasContext.stroke();\n        \n        // Draw decibel scale.\n        \n        for (var db = -dbScale; db < dbScale - 10; db += 10) {\n            y = dbToY(db, pixelsPerDb, height);\n            canvasContext.strokeStyle = textColor;\n            canvasContext.strokeText(db.toFixed(0) + \"dB\", width - 40, y);\n            canvasContext.strokeStyle = gridColor;\n            canvasContext.beginPath();\n            canvasContext.moveTo(0, y);\n            canvasContext.lineTo(width, y);\n            canvasContext.stroke();\n        }\n    };\n\n    draw();\n\n    return () => {\n        play = false;\n    };\n}\n\ninterface EQProps extends ConnectableNode {\n    initial: {\n        enabled?: boolean,\n        frequency: number,\n        detune: number,\n        Q: number,\n        gain: number,\n        biquadType: string\n    }\n}\n\nconst BiquadTypes = [\n    'lowpass',\n    'highpass',\n    'bandpass',\n    'lowshelf',\n    'highshelf',\n    'peaking',\n    'notch',\n    'allpass'\n];\n\nexport const getLogScale = (factor: number, min: number, max: number) => {\n    const nyquist = max;\n    const noctaves = Math.log(nyquist / min) / Math.LN2;\n    const v2 = Math.pow(2.0, noctaves * (factor - 1.0));\n    return v2 * nyquist;\n}\n\nexport const getCutoff = (audio: AudioContext, factor: number, min: number = 10): number => {\n    return getLogScale(factor, min, audio.sampleRate * .5);\n};\n\nexport const EQ = ({ audio, initial, serialized$, commands$, input, out }: EQProps) => {\n    const [enabled, setEnabled] = useState<boolean>(initial.enabled ?? true);\n    const [biquad] = useState<BiquadFilterNode>(new BiquadFilterNode(audio));\n\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    \n    const [frequency, frequencyKnob] = useKnob(initial.frequency ?? .5, { min: 0, max: 1, bind: biquad.frequency });\n    const [detune, detuneKnob] = useKnob(initial.detune ?? 0, { min: 0, max: 100, bind: biquad.detune });\n    const [Q, QKnob] = useKnob(initial.Q ?? 1, { min: 0.0001, max: 100, bind: biquad.Q });\n    const [gain, gainKnob] = useKnob(initial.gain ?? 0, { min: -40, max: 40, bind: biquad.gain });\n    const [biquadType, setBiquadType] = useState<BiquadFilterType>((initial.biquadType ?? 'lowpass') as BiquadFilterType);\n\n    // useEffect(() => {\n    //     const lfoGain = new GainNode(audio);\n    //     lfoGain.gain.value = 100;\n\n    //     const lfo = new OscillatorNode(audio);\n    //     lfo.type = 'triangle';\n    //     lfo.frequency.value = 30;\n\n    //     lfo.connect(lfoGain).connect(biquad.frequency);\n    //     lfo.start();\n    // }, [audio, biquad]);\n    \n    useEffect(() => {\n        if(!canvasRef.current) return;\n\n        return drawCurve(audio, biquad, canvasRef.current);\n    }, [audio, biquad, canvasRef]);\n\n    useEffect(() => {\n        if(enabled)\n            input?.connect(biquad).connect(out);\n        else\n            input?.connect(out);\n\n        return () => [\n            () => input?.disconnect(biquad),\n            () => input?.disconnect(out),\n            () => biquad.disconnect(out)\n        ].forEach(tryTo);\n    }, [input, biquad, out, enabled]);\n\n    useEffect(() => {\n        biquad.frequency.setValueAtTime(getCutoff(audio, frequency), audio.currentTime);\n        biquad.detune.setValueAtTime(detune, audio.currentTime)\n        biquad.Q.setValueAtTime(Q, audio.currentTime);\n        biquad.gain.setValueAtTime(gain, audio.currentTime);\n        biquad.type = biquadType;\n    }, [audio, frequency, detune, Q, gain, biquadType, biquad]);\n\n    const serializedData = {\n        frequency,\n        detune,\n        Q,\n        gain,\n        biquadType\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => serialized$.next(serializedData), Object.values(serializedData));\n\n    return (\n        <Box>\n            <Row>\n                <h3>EQ</h3>\n                <input type=\"checkbox\" checked={enabled} onChange={e => setEnabled(e.target.checked)} />\n            </Row>\n\n            <Row>\n                <canvas ref={canvasRef}></canvas>\n            </Row>\n\n            <Row>\n                <label>\n                    <select value={biquadType} onChange={e => setBiquadType(e.target.value as BiquadFilterType)}>\n                        {\n                            BiquadTypes.map((v, i) => <option key={i} value={v}>{v}</option>)\n                        }\n                    </select>\n                </label>\n                <label>\n                    <span>Frequency: {getCutoff(audio, frequency).toFixed(0)}</span>\n                    {frequencyKnob}\n                </label>\n            </Row>\n\n            <Row>\n                <label>\n                    <span>Detune: {detune}</span>\n                    {detuneKnob}\n                </label>\n                <label>\n                    <span>Q: {Q}</span>\n                    {QKnob}\n                </label>\n                <label>\n                    <span>Gain: {gain}</span>\n                    {gainKnob}\n                </label>\n            </Row>\n        </Box>\n    );\n};","import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport { Box } from '../style/Box';\nimport { BehaviorSubject } from 'rxjs';\nimport { useKnob } from '../Knob';\nimport { Row } from '../style/Geometry';\nimport { tryTo } from '../Channel';\nimport { getLogScale, getCutoff } from './EQ';\n\nexport const LFOContext = React.createContext<BehaviorSubject<AudioNode | null>>(new BehaviorSubject<AudioNode | null>(null));\n\nconst MinFreq = .1;\nconst MinGain = .01;\n\nconst getGain = (gain: number) => gain === 0 ? 0 : getLogScale(gain, MinGain, 1000);\n\ninterface LFOProps {\n    audio: AudioContext\n};\n\nexport const LFO = ({ audio }: LFOProps) => {\n    const lfo$ = useContext(LFOContext);\n\n    const [isMoving, setIsMoving] = useState<boolean>(false);\n    const [pos, setPos] = useState<[number, number]>();\n\n    const [frequency, frequencyKnob] = useKnob(.5, { min: 0, max: 1 });\n    const [gain, gainKnob] = useKnob(.1, { min: 0, max: 1, step: .001 });\n\n    const [form, setForm] = useState<OscillatorType>('sine' as OscillatorType);\n    const [lfo] = useState<OscillatorNode>(new OscillatorNode(audio));\n    const [lfoGain] = useState<GainNode>(new GainNode(audio));\n\n    useEffect(() => {\n        lfo.start();\n    }, [lfo]);\n\n    useEffect(() => {\n        lfo.type = form;\n        lfo.frequency.setValueAtTime(getCutoff(audio, frequency, MinFreq), audio.currentTime);\n        lfoGain.gain.setValueAtTime(getGain(gain), audio.currentTime);\n        lfo.connect(lfoGain);\n\n        return () => {\n            lfo.frequency.cancelScheduledValues(audio.currentTime);\n            lfoGain.gain.cancelScheduledValues(audio.currentTime);\n\n            [\n                () => lfo.disconnect(lfoGain)\n            ].forEach(tryTo);\n        };\n    }, [audio, lfo, lfoGain, frequency, form, gain]);\n    \n    const onMouseDown = useCallback(\n        (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n            setIsMoving(true);\n            let hasMoved = false;\n\n            const start = [e.clientX, e.clientY];\n            setPos([0, 0]);\n\n            const onMouseUp = () => {\n                document.removeEventListener('mouseup', onMouseUp);\n                document.removeEventListener('mousemove', onMouseMove);\n\n                setIsMoving(false);\n\n                if(hasMoved)\n                    lfo$.next(null);\n            };\n\n            const onMouseMove = (e: MouseEvent) => {\n                if(!hasMoved) {\n                    hasMoved = true;\n                    lfo$.next(lfoGain);\n                }\n\n                e.preventDefault();\n                const position: [number, number] = [e.clientX - start[0], e.clientY - start[1]];\n                setPos(position);\n            };\n    \n            document.addEventListener('mouseup', onMouseUp);\n            document.addEventListener('mousemove', onMouseMove);\n        },\n        [lfo$, lfoGain]\n    );\n\n    let style = {};\n    if(isMoving && pos) {\n        style = {\n            transform: `translate(${pos[0]}px, ${pos[1]}px)`\n        };\n    }\n\n    return (\n        <Box>\n            <h3>LFO (drag and drop)</h3>\n\n            <Box style={style} onMouseDown={onMouseDown}>\n                <Row>\n                    <label>\n                        <span>Form <b>{form}</b></span>\n                        <select value={form} onChange={e => setForm(e.target.value as OscillatorType)}>\n                            <option value=\"sine\">Sine</option>\n                            <option value=\"triangle\">Triangle</option>\n                            <option value=\"square\">Square</option>\n                            <option value=\"sawtooth\">Sawtooth</option>\n                        </select>\n                    </label>\n                </Row>\n                <Row>\n                    <label>\n                        <span>Frequency: {getCutoff(audio, frequency, MinFreq).toFixed(1)}</span>\n                        {frequencyKnob}\n                    </label>\n                    <label>\n                        <span>Gain: {getGain(gain).toFixed(Math.log10(1 / MinGain))}</span>\n                        {gainKnob}\n                    </label>\n                </Row>\n            </Box>\n        </Box>\n    );\n};","import React, { useState, useRef, useCallback, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { LFOContext } from './elements/LFO';\n\nconst range = 220;\n\nconst collision = (pos: [number, number], rect: DOMRect) => {\n    return pos[0] > rect.x\n        && pos[0] < rect.x + rect.width\n        && pos[1] > rect.y\n        && pos[1] < rect.y + rect.height;\n};\n\ninterface DroppableKnobProps {\n    active: boolean\n}\n\nconst DroppableKnob = styled.div`\n    position: relative;\n    display: inline-block;\n    margin: 5px;\n    &:after {\n        ${({ active }: DroppableKnobProps) => active && `\n            content: '';\n            top: 0;\n            left: 0;\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            border-radius: 3px;\n            background-color: rgba(150, 150, 150, .5);\n        `}\n    }\n`;\n\nexport const useKnob = (initialValue: number, options: {\n    min?: number,\n    max?: number,\n    step?: number,\n    bind?: AudioParam\n} = {}): [number, JSX.Element, React.Dispatch<React.SetStateAction<number>>] => {\n    const [value, setValue] = useState<number>(initialValue);\n    const [active, setActive] = useState<boolean>(false);\n    const [lfos, setLfos] = useState<{\n        lfo: AudioNode,\n        remove: () => void\n    }[]>([]);\n\n    const knobRef = useRef<HTMLDivElement>(null);\n\n    const lfo$ = useContext(LFOContext);\n\n    useEffect(() => {\n        if(!options.bind) return;\n\n        const sub = lfo$.subscribe(lfo => {\n            if(!knobRef.current) return;\n\n            setActive(!!lfo);\n\n            if(lfo) {\n                const knob = knobRef.current;\n\n                const onMouseUp = (e: MouseEvent) => {\n                    document.removeEventListener('mouseup', onMouseUp);\n\n                    if(collision([e.clientX, e.clientY], knob.getBoundingClientRect())) {\n                        if(!options.bind) return;\n                        lfo.connect(options.bind);\n                        setLfos(lfos => [...lfos, {\n                            lfo,\n                            remove: () => {\n                                setLfos(lfos => lfos.filter(v => v.lfo !== lfo));\n                                if(!options.bind) return;\n                                lfo.disconnect(options.bind);\n                            }\n                        }]);\n                    }\n                };\n\n                document.addEventListener('mouseup', onMouseUp);\n            }\n        });\n\n        return () => sub.unsubscribe();\n    }, [lfo$, setActive, options.bind, knobRef, setLfos]);\n\n    const knob = (\n        <DroppableKnob ref={knobRef} active={active}>\n            <Knob\n                initialValue={value}\n                onChange={v => setValue(v)}\n                min={options.min ?? 0}\n                max={options.max ?? 1}\n                step={options.step ?? .01}\n                lfos={lfos} />\n        </DroppableKnob>\n    );\n\n    return [value, knob, setValue];\n};\n\ninterface KnobProps {\n    initialValue: number,\n    onChange: (value: number) => void,\n    factor?: number,\n    min?: number,\n    max?: number,\n    step?: number,\n    lfos?: {\n        lfo: AudioNode,\n        remove: () => void\n    }[]\n};\n\nexport const Knob = ({ onChange, factor = .01, min = -1, max = 1, initialValue, step = .01, lfos = [] }: KnobProps) => {\n    const [value, setValue] = useState(initialValue);\n    const knob = useRef(null);\n\n    const onMouseDown = useCallback(\n        (e: React.MouseEvent) => {\n            e.stopPropagation();\n\n            const start = [e.screenX, e.screenY];\n            let change = 0;\n    \n            const onMouseUp = (e: Event) => {\n                document.removeEventListener('mouseup', onMouseUp);\n                document.removeEventListener('mousemove', onMouseMove);\n            };\n    \n            const onMouseMove = (e: MouseEvent) => {\n                e.preventDefault();\n                const position = [e.screenX, e.screenY];\n                change = factor * Math.abs(max - min) * (start[1] - position[1]);\n                let updated = Math.round((value + change) * 1 / step) / (1 / step);\n    \n                if(updated > max) {\n                    updated = max;\n                } else if (updated < min) {\n                    updated = min;\n                }\n    \n                setValue(updated);\n                onChange(updated);\n            };\n    \n            document.addEventListener('mouseup', onMouseUp);\n            document.addEventListener('mousemove', onMouseMove);\n        },\n        [factor, max, min, onChange, step, setValue, value]\n    );\n\n    const effectiveRange = range * 1;\n    const rotation = (value - min) * effectiveRange / Math.abs(max - min) - effectiveRange / 2;\n    const style = {\n        transform: `rotate(${rotation}deg)`\n    };\n\n    return (\n        <KnobWrapper>\n            <LFOCount>\n                {\n                    lfos.map((v, i) =>\n                        <LFOBlob key={i} onClick={(e) => v.remove()} />\n                    )\n                }\n            </LFOCount>\n            <StyledKnob ref={knob} onMouseDown={onMouseDown} style={style}>\n            </StyledKnob>\n        </KnobWrapper>\n    );\n};\n\nconst KnobWrapper = styled.div`\n    position: relative;\n`;\n\nconst LFOCount = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    color: black;\n`;\n\nconst LFOBlob = styled.div`\n    width: 10px;\n    height: 10px;\n    border-radius: 100%;\n    background: blue;\n    cursor: pointer;\n    opacity: .8;\n    &:hover {\n        opacity: 1;\n    }\n`;\n\nconst StyledKnob = styled.div`\n    position: relative;\n    width: 75px;\n    height: 75px;\n    border-radius: 100%;\n    background: url('./resources/knob.png');\n    background-position: center center;\n    background-size: contain;\n`;","import React, { useState, useEffect, useRef } from 'react';\nimport { Box } from '../style/Box';\nimport { ConnectableNode, tryTo } from '../Channel';\nimport { useKnob } from '../Knob';\nimport { Row } from '../style/Geometry';\nimport styled from 'styled-components';\n\nconst CompressorReductionStyled = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\ninterface CompressorReductionProps {\n    compressor?: DynamicsCompressorNode\n}\n\nconst CompressorReduction = ({ compressor }: CompressorReductionProps) => {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if(!canvasRef.current) return;\n\n        const { width, height } = canvasRef.current;\n        const ctx = canvasRef.current.getContext('2d');\n        if(!ctx) return;\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.font = \"30px Arial\";\n\n        if(!compressor) return;\n\n        let play: boolean = true;\n\n        const render = () => {\n            if(!play) return;\n            requestAnimationFrame(render);\n\n            ctx.clearRect(0, 0, width, height);\n\n            const bar = compressor.reduction / -60;\n            ctx.fillStyle = 'rgb(' + (255 * bar + 50) + ',50,50)';\n            ctx.fillRect(0, 0, width * bar, height);\n        };\n\n        render();\n\n        return () => {\n            play = false;\n        };\n    }, [compressor, canvasRef]);\n\n    const canvasStyle = {\n        width: 100,\n        height: 10\n    };\n\n    return (\n        <CompressorReductionStyled>\n            <canvas ref={canvasRef} style={canvasStyle}></canvas>\n        </CompressorReductionStyled>\n    );\n};\n\ninterface CompressorProps extends ConnectableNode {\n    initial: {\n        enabled: boolean,\n        threshold: number,\n        knee: number,\n        ratio: number,\n        attack: number,\n        release: number\n    }\n};\n\nexport const Compressor = ({ audio, input, out, initial, serialized$ }: CompressorProps) => {\n    const [enabled, setEnabled] = useState<boolean>(initial.enabled ?? true);\n\n    const [compressor] = useState<DynamicsCompressorNode>(new DynamicsCompressorNode(audio));\n\n    const [threshold, thresholdKnob] = useKnob(initial.threshold ?? -50, { min: -100, max: 0, bind: compressor.threshold });\n    const [knee, kneeKnob] = useKnob(initial.knee ?? 40, { min: 0, max: 40, bind: compressor.knee });\n    const [ratio, ratioKnob] = useKnob(initial.ratio ?? 12, { min: 1, max: 20, bind: compressor.ratio });\n    const [attack, attackKnob] = useKnob(initial.attack ?? 0, { max: 1, bind: compressor.attack });\n    const [release, releaseKnob] = useKnob(initial.release ?? .25, { min: .01, bind: compressor.release });\n\n    useEffect(() => {\n        if(enabled)\n            input?.connect(compressor).connect(out);\n        else\n            input?.connect(out);\n\n        return () => [\n            () => input?.disconnect(compressor),\n            () => input?.disconnect(out),\n            () => compressor.disconnect(out)\n        ].forEach(tryTo);\n    }, [input, out, compressor, enabled]);\n\n    useEffect(() => {\n        compressor.threshold.setValueAtTime(threshold, audio.currentTime);\n        compressor.knee.setValueAtTime(knee, audio.currentTime);\n        compressor.ratio.setValueAtTime(ratio, audio.currentTime);\n        compressor.attack.setValueAtTime(attack, audio.currentTime);\n        compressor.release.setValueAtTime(release, audio.currentTime);\n    }, [audio, compressor, threshold, knee, ratio, attack, release]);\n\n    const serializedData = {\n        enabled,\n        threshold,\n        knee,\n        ratio,\n        release,\n        attack,\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => serialized$.next(serializedData), Object.values(serializedData));\n\n    return (\n        <Box>\n            <Row>\n                <h3>Compressor</h3>\n                <input type=\"checkbox\" checked={enabled} onChange={e => setEnabled(e.target.checked)} />\n                <CompressorReduction compressor={enabled ? compressor : undefined} />\n            </Row>\n\n            <Row>\n                <label>\n                    <span>Ratio: {ratio}</span>\n                    {ratioKnob}\n                </label>\n            </Row>\n            <Row>\n                <label>\n                    <span>Threshold: {threshold}</span>\n                    {thresholdKnob}\n                </label>\n                <label>\n                    <span>Knee: {knee}</span>\n                    {kneeKnob}\n                </label>\n            </Row>\n            <Row>\n                <label>\n                    <span>Release: {release}</span>\n                    {releaseKnob}\n                </label>\n                <label>\n                    <span>Attack: {attack}</span>\n                    {attackKnob}\n                </label>\n            </Row>\n        </Box>\n    );\n};","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { ConnectableNode, tryTo } from '../Channel';\nimport { Box } from '../style/Box';\nimport { Row } from '../style/Geometry';\n\ninterface ReverbProps extends ConnectableNode {\n    initial: {\n        enabled?: boolean,\n        impulse?: string\n    }\n}\n\nconst Impulses = [\n    'Block Inside.wav',\n    'Bottle Hall.wav',\n    'Cement Blocks 1.wav',\n    'Cement Blocks 2.wav',\n    'Chateau de Logne, Outside.wav',\n    'Conic Long Echo Hall.wav',\n    'Deep Space.wav',\n    'Derlon Sanctuary.wav',\n    'Direct Cabinet N1.wav',\n    'Direct Cabinet N2.wav',\n    'Direct Cabinet N3.wav',\n    'Direct Cabinet N4.wav',\n    'Five Columns Long.wav',\n    'Five Columns.wav',\n    'French 18th Century Salon.wav',\n    'Going Home.wav',\n    'Greek 7 Echo Hall.wav',\n    'Highly Damped Large Room.wav',\n    'In The Silo Revised.wav',\n    'In The Silo.wav',\n    'Large Bottle Hall.wav',\n    'Large Long Echo Hall.wav',\n    'Large Wide Echo Hall.wav',\n    'Masonic Lodge.wav',\n    'Musikvereinsaal.wav',\n    'Narrow Bumpy Space.wav',\n    'Nice Drum Room.wav',\n    'On a Star.wav',\n    'Parking Garage.wav',\n    'Rays.wav',\n    'Right Glass Triangle.wav',\n    'Ruby Room.wav',\n    'Scala Milan Opera Hall.wav',\n    'Small Drum Room.wav',\n    'Small Prehistoric Cave.wav',\n    'St Nicolaes Church.wav',\n    'Trig Room.wav',\n    'Vocal Duo.wav'\n].map(v => v.slice(0, v.length - 4))\n\nexport const Reverb = ({ audio, input, out, serialized$, initial }: ReverbProps) => {\n    const [enabled, setEnabled] = useState<boolean>(initial.enabled ?? true);\n\n    const [convolver] = useState<ConvolverNode>(new ConvolverNode(audio));\n    const [impulse, setImpulse] = useState<string>(initial.impulse ?? Impulses[0]);\n    const [currentSound, setCurrentSound] = useState<ArrayBuffer>();\n    const player = useRef<HTMLAudioElement>(null);\n\n    useEffect(() => {\n        fetch(`./resources/impulses/${impulse}.wav`)\n            .then(r => r.arrayBuffer())\n            .then(v => {\n                setCurrentSound(v.slice(0));\n                audio.decodeAudioData(v, buf => convolver.buffer = buf);\n            });\n    }, [audio, impulse, convolver]);\n\n    useEffect(() => {\n        if(enabled)\n            input?.connect(convolver).connect(out);\n        else\n            input?.connect(out);\n\n        return () => [\n            () => input?.disconnect(out),\n            () => input?.disconnect(convolver),\n            () => convolver.disconnect(out)\n        ].forEach(tryTo);\n    }, [enabled, input, convolver, out]);\n\n    const serializedData = {\n        enabled,\n        impulse\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => serialized$.next(serializedData), Object.values(serializedData));\n\n    const playSound = useCallback(\n        () => {\n            if(!player?.current || !currentSound) return;\n\n            let blob = new Blob([currentSound], { type: 'audio/mp3' });\n            let url = window.URL.createObjectURL(blob)\n            player.current.src = url;\n            player.current.play();\n        },\n        [currentSound]\n    );\n\n    return (\n        <Box>\n            <Row>\n                <h3>Reverb</h3>\n                <input type=\"checkbox\" checked={enabled} onChange={e => setEnabled(e.target.checked)} />\n            </Row>\n\n            <audio ref={player} style={{display: 'none'}}></audio>\n\n            <Row>\n                <label>\n                    <span>Impulse <b>{impulse}</b></span>\n                    <select value={impulse} onChange={e => setImpulse(e.target.value as string)}>\n                        {\n                            Impulses.map((v, i) => <option key={i} value={v}>{v}</option>)\n                        }\n                    </select>\n                    <button onClick={playSound}>Play sound</button>\n                </label>\n            </Row>\n        </Box>\n    );\n};","import React, { useState, useEffect, useReducer, useRef, useCallback } from 'react';\nimport { ES1 } from './elements/ES1';\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Compressor } from './elements/Compressor';\nimport { Reverb } from './elements/Reverb';\nimport { EQ } from './elements/EQ';\nimport { LFO, LFOContext } from './elements/LFO';\nimport { Box } from './style/Box';\nimport styled from 'styled-components';\n\nexport type Command = {\n    note: number,\n    velocity: number\n};\n\nexport interface ConnectableNode {\n    audio: AudioContext,\n    input?: AudioNode | undefined,\n    out: AudioNode,\n    initial: any,\n    commands$?: Observable<Command>,\n    serialized$: BehaviorSubject<VSTSettings>\n};\n\ntype VSTSettings = any;\n\ntype SerializedVST = {\n    name: string,\n    id: number,\n    pos: number,\n    open?: boolean,\n    wrapperSettings: PluginElementSettings,\n    settings: VSTSettings\n}\n\ntype SerializedChannel = {\n    vsts: SerializedVST[]\n};\n\nconst getLocal = <T extends Object>(key: string): T | undefined => {\n\tconst res = localStorage.getItem(key);\n\tif(res === null)\n        return undefined;\n        \n    try {\n        return JSON.parse(res) ?? undefined;\n    } catch(e) {\n        return undefined;\n    }\n};\n\nconst Elements: {\n    [id: string]: (props: ConnectableNode) => JSX.Element\n} = {\n    'ES1': ES1,\n    'Compressor': Compressor,\n    'Reverb': Reverb,\n    'EQ': EQ\n};\n\nenum ActionType {\n    CHANGE_SETTINGS,\n    CHANGE_WRAPPER_SETTINGS\n};\n\nconst serializeReducer = (state: SerializedChannel, action: { type: ActionType, id: number, payload?: any }) => {\n    switch(action.type) {\n        case ActionType.CHANGE_SETTINGS: {\n            const find = state.vsts.findIndex(v => v.id === action.id);\n            if(find < 0)\n                return {...state};\n\n            return {\n                vsts: [\n                    ...state.vsts.slice(0, find),\n                    {\n                        ...state.vsts[find],\n                        settings: action.payload\n                    },\n                    ...state.vsts.slice(find + 1)\n                ]\n            }\n        }\n\n        case ActionType.CHANGE_WRAPPER_SETTINGS: {\n            const find = state.vsts.findIndex(v => v.id === action.id);\n            if(find < 0)\n                return {...state};\n\n                return {\n                    vsts: [\n                        ...state.vsts.slice(0, find),\n                        {\n                            ...state.vsts[find],\n                            wrapperSettings: action.payload\n                        },\n                        ...state.vsts.slice(find + 1)\n                    ]\n                }\n        }\n\n        default:\n            return state;\n    }\n};\n\nconst initialSerialized: SerializedChannel = {\n    vsts: [{\n        id: 0,\n        pos: 0,\n        name: 'ES1',\n        wrapperSettings: {},\n        settings: getLocal('ES1') ?? {}\n    },{\n        id: 1,\n        pos: 2,\n        name: 'Compressor',\n        wrapperSettings: {},\n        settings: {}\n    },{\n        id: 2,\n        pos: 1,\n        name: 'Reverb',\n        wrapperSettings: {},\n        settings: {}\n    },{\n        id: 3,\n        pos: 3,\n        name: 'EQ',\n        wrapperSettings: {},\n        settings: {}\n    }]\n};\n\nconst SERIALIZED_KEY = 'SERIALIZED';\n\ntype VST = {\n    name: string,\n    open: boolean,\n    id: number,\n    element: JSX.Element,\n    wrapper: JSX.Element,\n    serialized$: Observable<SerializedVST>,\n    wrapperSerialized$: Observable<SerializedVST>,\n    node: AudioNode\n};\n\nexport const tryTo = (f: Function) => {\n    try {\n        f()\n    } catch(e) {}\n};\n\ninterface ChannelProps {\n    audio: AudioContext,\n    out: AudioNode,\n    commands$: Observable<Command>\n};\n\nexport const Channel = ({ audio, out, commands$ }: ChannelProps) => {\n    const [vsts, setVsts] = useState<VST[]>([]);\n    const [lfoContext] = useState(new BehaviorSubject<AudioNode | null>(null));\n\n    const [serialized, dispatch] = useReducer(\n        serializeReducer,\n        getLocal<SerializedChannel>(SERIALIZED_KEY) ?? initialSerialized\n    );\n\n    const [firstTime, setFirstTime] = useState<boolean>(true);\n    \n    const staticSerialized = useRef<SerializedChannel>(serialized);\n\n    useEffect(() => {\n        staticSerialized.current = serialized;\n    }, [serialized]);\n\n    useEffect(() => {\n        if(firstTime) {\n            setFirstTime(false);\n            return;\n        }\n        localStorage.setItem(SERIALIZED_KEY, JSON.stringify(serialized));\n    }, [firstTime, serialized]);\n\n    useEffect(() => {\n        let prevNode: AudioNode | undefined = undefined;\n\n        const vsts: VST[] = Object.values(staticSerialized.current.vsts)\n            .sort((a, b) => a.pos - b.pos)\n            .map((v, i) => {\n                const Element = Elements[v.name];\n                const node = audio.createGain();\n\n                const serialized$: BehaviorSubject<VSTSettings> = new BehaviorSubject<VSTSettings>(v.settings);\n                const element = <Element\n                    key={i}\n                    audio={audio}\n                    commands$={commands$}\n                    input={prevNode}\n                    out={node}\n                    initial={v.settings}\n                    serialized$={serialized$} />;\n\n                prevNode = node;\n\n                const wrapperSerialized$ = new BehaviorSubject<PluginElementSettings>(v.wrapperSettings);\n                const wrapper = <PluginElement\n                    key={i}\n                    serialized$={wrapperSerialized$}\n                    initial={v.wrapperSettings}\n                    element={element}>{v.name}</PluginElement>\n\n                return {\n                    name: v.name,\n                    id: v.id,\n                    open: false,\n                    element,\n                    wrapper,\n                    wrapperSerialized$: wrapperSerialized$.pipe(\n                        map(j => ({\n                            ...v,\n                            wrapperSettings: j\n                        }))\n                    ),\n                    serialized$: serialized$.pipe(\n                        map(j => ({\n                            ...v,\n                            settings: j\n                        }))\n                    ),\n                    node\n                };\n            });\n\n        vsts[vsts.length - 1].node.connect(out);\n        setVsts(vsts);\n\n        const sub = merge(...vsts.map(v => v.serialized$))\n            .subscribe(v => {\n                dispatch({\n                    type: ActionType.CHANGE_SETTINGS,\n                    payload: v.settings,\n                    id: v.id\n                });\n            });\n\n        const wrapperSub = merge(...vsts.map(v => v.wrapperSerialized$))\n            .subscribe(v => {\n                dispatch({\n                    type: ActionType.CHANGE_WRAPPER_SETTINGS,\n                    payload: v.wrapperSettings,\n                    id: v.id\n                });\n            });\n\n        return () => {\n            vsts[vsts.length - 1].node.disconnect(out);\n            sub.unsubscribe();\n            wrapperSub.unsubscribe();\n        };\n    }, [audio, commands$, out, staticSerialized]);\n\n    return (\n        <LFOContext.Provider value={lfoContext}>\n            <Box>\n                {vsts.map(v => v.wrapper)}\n            </Box>\n            <LFO audio={audio}></LFO>\n\n        </LFOContext.Provider>\n    );\n};\n\ninterface PluginElementSettings {\n    open?: boolean,\n    pos?: [number, number]\n};\n\ninterface PluginElementProps {\n    element: JSX.Element,\n    initial: PluginElementSettings,\n    children: React.ReactNode,\n    serialized$: BehaviorSubject<PluginElementSettings>\n};\n\nconst PluginElement = ({ element, children, serialized$, initial = {} }: PluginElementProps) => {\n    const [pos, setPos] = useState<[number, number]>(initial.pos ?? [0, 0]);\n    const [open, setOpen] = useState<boolean>(initial.open ?? false);\n\n    const onMouseDown = useCallback(\n        (e: React.MouseEvent) => {\n            const target = e.target as HTMLDivElement;\n            const {x, y} = target.getBoundingClientRect();\n            const offset = [e.clientX - x, e.clientY - y];\n\n            const onMouseUp = (e: MouseEvent) => {\n                document.removeEventListener('mouseup', onMouseUp);\n                document.removeEventListener('mousemove', onMouseMove);\n            };\n\n            const onMouseMove = (e: MouseEvent) => {\n                e.preventDefault();\n                const pos: [number, number] = [e.clientX - offset[0], e.clientY - offset[1]];\n                setPos(pos);\n                serialized$.next({ open, pos });\n            };\n\n            document.addEventListener('mouseup', onMouseUp);\n            document.addEventListener('mousemove', onMouseMove);\n        },\n        [open, serialized$]\n    );\n\n    const onPluginClick = useCallback(\n        (e: React.MouseEvent) => {\n            setOpen(v => !v);\n            serialized$.next({ open: true, pos });\n        },\n        [setOpen, pos, serialized$]\n    );\n\n    const onCloseClick = useCallback(\n        (e: React.MouseEvent) => {\n            setOpen(false);\n        },\n        [setOpen]\n    );\n\n    let style: React.CSSProperties = {\n        display: open ? 'block' : 'none',\n    };\n\n    if(pos) {\n        style = {\n            ...style,\n            left: pos[0],\n            top: pos[1]\n        };\n    }\n\n    return (\n        <>\n            <PluginElementOpened style={style}>\n                <PluginElementBar onMouseDown={onMouseDown}>\n                    <PluginElementBarClose onClick={onCloseClick} />\n                </PluginElementBar>\n                {element}\n            </PluginElementOpened>\n            <PluginListElementStyled onClick={onPluginClick}>{children}</PluginListElementStyled>\n        </>\n    );\n};\n\nconst PluginElementBar = styled.div`\n    background: #b2b2ff;\n    width: 100%;\n    height: 20px;\n    cursor: move;\n    display: flex;\n    align-items: center;\n    padding: 0 2px;\n`;\n\nconst PluginElementBarClose = styled.button`\n    border-radius: 100%;\n    background: red;\n    border: none;\n    width: 15px;\n    height: 15px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-weight: bold;\n    font-size: 10px;\n    outline: none;\n    cursor: pointer;\n\n    opacity: .8;\n    &:hover {\n        opacity: 1;\n    }\n\n    &:before {\n        content: 'x';\n    }\n`;\n\nconst PluginElementOpened = styled.div`\n    position: absolute;\n    border: 1px solid black;\n    border-radius: 3px;\n    z-index: 999;\n    overflow: hidden;\n\n    > ${Box} {\n        margin: 0;\n    }\n`;\n\nconst PluginListElementStyled = styled.div`\n    padding: 5px;\n    margin-bottom: 2px;\n    border-radius: 3px;\n    background: #007ea7;\n    position: relative;\n\n    &:first-child {\n        margin-bottom: 10px;\n        &:after {\n            content: '';\n            display: block;\n            position: absolute;\n            border-bottom: 1px solid #444;\n            width: 100%;\n            height: 1px;\n            left: 0;\n            bottom: -5px;\n        }\n    }\n\n    cursor: pointer;\n    opacity: .8;\n    &:hover {\n        opacity: 1;\n    }\n`;","import React, { useState, useEffect, useCallback } from 'react';\nimport { ConnectableNode } from '../Channel';\nimport { Box } from '../style/Box';\nimport { Notes } from '../../data/Notes';\nimport { useKnob } from '../Knob';\nimport { Observable } from 'rxjs';\nimport { Row } from '../style/Geometry';\n\nexport type OscillatorMode = 'poly' | 'mono' | 'legato';\n\n// const useSlider = (initialValue: number, min: number = 0, max: number = 2, step: number = .01) => {\n//     const [value, setValue] = useState<number>(initialValue);\n\n//     return {\n//         value,\n//         setValue,\n//         reset: () => setValue(initialValue),\n//         bind: {\n//             value,\n//             onChange: (e: React.ChangeEvent<HTMLInputElement>) => setValue(+(e.target as HTMLInputElement)?.value),\n//             step,\n//             type: 'range',\n//             min,\n//             max,\n//         }\n//     };\n// };\n\n// const usePoly = () => {\n//     return [\n//         (note: number) => {\n//             out.connect(node);\n//             osc.frequency.setValueAtTime(note, audio.currentTime);\n//             osc.frequency.value = note;\n//             osc.start();\n\n//             return {\n//                 release: () => {\n//                     console.log('ES1 releasing note', note);\n//                     setFrequencies(frequencies => frequencies.filter(v => v !== note));\n\n//                     env.gain.setValueAtTime(1, audio.currentTime);\n//                     env.gain.linearRampToValueAtTime(0, audio.currentTime + release);\n//                 }\n//             };\n//         }\n//     ];\n// };\n\ninterface Playing {\n    playing: boolean,\n    velocity: number,\n    osc: OscillatorNode[],\n    env: GainNode,\n    gain: GainNode,\n    // pan: StereoPannerNode,\n};\n\ninterface ES1Props extends ConnectableNode {\n    initial: {\n        mode?: string | OscillatorMode,\n        form?: string | OscillatorType,\n        release: number,\n        attack: number,\n        volume: number,\n        glide: number,\n        voices: number,\n        detune: number\n    }\n};\n\nexport const ES1 = ({ audio, serialized$, initial, out, commands$ = new Observable() }: ES1Props) => {\n    const [finalGain] = useState<GainNode>(new GainNode(audio));\n\n    const [mode, setMode] = useState<OscillatorMode>((initial.mode ?? 'poly') as OscillatorMode);\n    const [form, setForm] = useState<OscillatorType>((initial.form ?? 'sine') as OscillatorType);\n\n    const [release, releaseKnob] = useKnob(initial.release ?? .2, { max: 5 });\n    const [attack, attackKnob] = useKnob(initial.attack ?? .2, { max: 5 });\n    const [volume, volumeKnob] = useKnob(initial.volume ?? .2);\n    const [glide, glideKnob] = useKnob(initial.glide ?? .2, { max: 5 });\n    const [voices, voicesKnob] = useKnob(initial.voices ?? 1, { min: 1, max: 16, step: 1 });\n    const [detune, detuneKnob] = useKnob(initial.detune ?? 0);\n\n    const [playing] = useState<{\n        [note: number]: Playing\n    }>({});\n\n    useEffect(() => {\n        finalGain.connect(out);\n        finalGain.gain.setValueAtTime(1, audio.currentTime);\n    }, [audio, out, finalGain]);\n\n    useEffect(() => {\n        const sub = commands$.subscribe(({ note, velocity }) => {\n            console.log('ES1 received command', note, velocity);\n\n            if(velocity <= 0) {\n                const active = playing[note];\n                if(!active)\n                    return;\n\n                active.playing = false;\n\n                active.env.gain.cancelScheduledValues(audio.currentTime)\n                    .setTargetAtTime(active.env.gain.value, audio.currentTime, 0)\n                    .linearRampToValueAtTime(0, audio.currentTime + release);\n\n                setTimeout(() => {\n                    active.osc.forEach(v => v.stop(audio.currentTime));\n                    active.gain.disconnect(finalGain);\n                }, release * 1e3);\n\n                return;\n            }\n\n            const env = audio.createGain();\n            env.gain.cancelScheduledValues(audio.currentTime)\n                .setValueAtTime(0, audio.currentTime)\n                .linearRampToValueAtTime(1, audio.currentTime + attack);\n            \n            const gain = audio.createGain();\n            gain.gain.setValueAtTime(volume * velocity / 127, audio.currentTime);\n\n            const [, frequency] = Object.entries(Notes)[note];\n\n            const osc = [...Array(voices)].map((v, i, a) => {\n                const pan = audio.createStereoPanner();\n                if(a.length >= 2)\n                    pan.pan.setValueAtTime(2 * i / a.length - 1, audio.currentTime);\n\n                const osc = audio.createOscillator();\n                osc.connect(env).connect(pan).connect(gain).connect(finalGain);\n\n                osc.type = form;\n                osc.frequency.setValueAtTime(frequency, audio.currentTime);\n                osc.detune.setValueAtTime(detune * ( a.length / 2 - i ), audio.currentTime);\n                return osc;\n            });\n            \n            // console.log('Playing frequency', toneName, frequency);\n            osc.forEach(v => v.start());\n\n            playing[note] = {\n                playing: true,\n                velocity,\n                osc,\n                env,\n                gain\n            };\n        });\n\n        return () => sub.unsubscribe();\n    }, [audio, commands$, playing, form, release, attack, volume, mode, glide, finalGain, voices, detune]);\n\n    const everyPlaying = useCallback(\n        (f: (v: Playing) => void) => Object.values(playing)\n            .filter(v => v.playing)\n            .forEach(f),\n        [playing]\n    );\n\n    useEffect(() => {\n        everyPlaying(v => v.gain.gain.setValueAtTime(volume * v.velocity / 127, audio.currentTime));\n    }, [audio, everyPlaying, volume]);\n\n    useEffect(() => {\n        everyPlaying(v => v.osc.forEach((osc, i, a) => osc.detune.setValueAtTime(detune * ( a.length / 2 - i ), audio.currentTime)));\n    }, [audio, everyPlaying, detune]);\n\n    const serializedData = {\n        mode,\n        form,\n        release,\n        attack,\n        volume,\n        glide,\n        voices,\n        detune\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => serialized$.next(serializedData), Object.values(serializedData));\n\n    return (\n        <Box>\n            <h3>Oscillator</h3>\n            {/* <h4>Frequencies: {JSON.stringify(frequencies)}</h4> */}\n\n            <Row>\n                <label>\n                    <span>Mode <b>{mode}</b></span>\n                    <select value={mode} onChange={e => setMode(e.target.value as OscillatorMode)}>\n                        <option value=\"poly\">Poly</option>\n                        <option value=\"mono\">Mono</option>\n                        <option value=\"legato\">Legato</option>\n                    </select>\n                </label>\n                <label>\n                    <span>Form <b>{form}</b></span>\n                    <select value={form} onChange={e => setForm(e.target.value as OscillatorType)}>\n                        <option value=\"sine\">Sine</option>\n                        <option value=\"triangle\">Triangle</option>\n                        <option value=\"square\">Square</option>\n                        <option value=\"sawtooth\">Sawtooth</option>\n                    </select>\n                </label>\n            </Row>\n            <label>\n                <span>Volume: {volume}</span>\n                {volumeKnob}\n            </label>\n            <Row>\n                <label>\n                    <span>Release: {release}</span>\n                    {releaseKnob}\n                </label>\n                <label>\n                    <span>Attack: {attack}</span>\n                    {attackKnob}\n                </label>\n            </Row>\n            <Row>\n                <label>\n                    <span>Voices: {voices}</span>\n                    {voicesKnob}\n                </label>\n                <label>\n                    <span>Detune: {detune}</span>\n                    {detuneKnob}\n                </label>\n            </Row>\n            <label>\n                <span>Glide: {glide}</span>\n                {glideKnob}\n            </label>\n        </Box>\n    )\n};","import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst DisplayStyled = styled.div`\n    margin: 15px;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\ntype DisplayProps = {\n    audio: AudioContext,\n    out: AudioNode\n};\n\nexport const WaveDisplay = ({ audio, out }: DisplayProps) => {\n    const [analyser, setAnalyser] = useState<AnalyserNode>(new AnalyserNode(audio));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if(!canvasRef.current) return;\n        const canvas = canvasRef.current;\n\n        const ctx = canvas.getContext('2d');\n        if(!ctx) return;\n\n        out.connect(analyser);\n\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        analyser.fftSize = 2048;\n        var bufferLength = analyser.fftSize;\n        var dataArray = new Uint8Array(bufferLength);\n\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n        let play = true;\n\n        const drawAlt = () => {\n            if(!play)\n                return;\n\n            requestAnimationFrame(drawAlt);\n            analyser.getByteTimeDomainData(dataArray);\n\n            ctx.fillStyle = 'rgb(0, 0, 0)';\n            ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = 'rgb(250, 250, 250)';\n\n            ctx.beginPath();\n\n            var sliceWidth = WIDTH * 1.0 / bufferLength;\n            var x = 0;\n\n            for (var i = 0; i < bufferLength; i++) {\n                var v = dataArray[i] / 128.0;\n                var y = v * HEIGHT / 2;\n        \n                if (i === 0) {\n                    ctx.moveTo(x, y);\n                } else {\n                    ctx.lineTo(x, y);\n                }\n        \n                x += sliceWidth;\n            }\n\n            ctx.lineTo(canvas.width, canvas.height / 2);\n            ctx.stroke();\n        };\n\n        drawAlt();\n        return () => {\n            play = false;\n            setAnalyser(new AnalyserNode(audio));\n        };\n    }, [audio, canvasRef, analyser, out]);\n\n    return (\n        <DisplayStyled>\n            <canvas ref={canvasRef}></canvas>\n        </DisplayStyled>\n    );\n};\n\nexport const FrequencyDisplay = ({ audio, out }: DisplayProps) => {\n    const [analyser, setAnalyser] = useState<AnalyserNode>(new AnalyserNode(audio));\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        if(!canvasRef.current) return;\n        const canvas = canvasRef.current;\n\n        const ctx = canvas.getContext('2d');\n        if(!ctx) return;\n\n        out.connect(analyser);\n\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        analyser.fftSize = 256;\n        var bufferLengthAlt = analyser.frequencyBinCount;\n        var dataArrayAlt = new Uint8Array(bufferLengthAlt);\n\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n        let play = true;\n\n        const drawAlt = () => {\n            if(!play)\n                return;\n\n            requestAnimationFrame(drawAlt);\n            analyser.getByteFrequencyData(dataArrayAlt);\n\n            ctx.fillStyle = 'rgb(0, 0, 0)';\n            ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n            var barWidth = (WIDTH / bufferLengthAlt) * 2.5;\n            var barHeight;\n            var x = 0;\n\n            for(var i = 0; i < bufferLengthAlt; i++) {\n                barHeight = dataArrayAlt[i];\n\n                ctx.fillStyle = 'rgb(' + (barHeight+100) + ',50,50)';\n                ctx.fillRect(x,HEIGHT-barHeight/2,barWidth,barHeight/2);\n\n                x += barWidth + 1;\n            }\n        };\n\n        drawAlt();\n        return () => {\n            play = false;\n            setAnalyser(new AnalyserNode(audio));\n        };\n    }, [audio, out, canvasRef, analyser]);\n\n    return (\n        <DisplayStyled>\n            <canvas ref={canvasRef}></canvas>\n        </DisplayStyled>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { Box } from './style/Box';\nimport { Subject } from 'rxjs';\nimport { Command } from './Channel';\n\nconst useMidiAccess = (): [WebMidi.MIDIAccess | undefined, string | undefined] => {\n    const [error, setError] = useState<string>();\n    const [access, setAccess] = useState<WebMidi.MIDIAccess>();\n\n    useEffect(() => {\n        if(!navigator.requestMIDIAccess) {\n            setError(\"Midi not supported\");\n            return;\n        }\n\n        navigator.requestMIDIAccess()\n            .then(\n                access => setAccess(access),\n                error => setError(error)\n            );\n    }, []);\n\n    return [access, error];\n};\n\ninterface MidiProps {\n    commands$: Subject<Command>\n};\n\nexport const Midi = ({ commands$ }: MidiProps) => {\n    const [access, error] = useMidiAccess();\n    const [man, setMan] = useState<string>();\n    const [name, setName] = useState<string>();\n    const [interfaces, setInterfaces] = useState<WebMidi.MIDIInput[]>([]);\n\n    // const hasAccess = access && access.inputs.size > 0;\n\n    useEffect(() => {\n        if(!access) return;\n\n        const update = () => {\n            let elements = [];\n            for(let input of access.inputs.values()) {\n                elements.push(input);\n            }\n\n            setInterfaces(elements);\n        };\n\n        access.onstatechange = e => {\n            console.log(e);\n\n            setMan(e.port.manufacturer);\n            setName(e.port.name);\n\n            update();\n        };\n\n        update();\n    }, [access, setMan, setName, setInterfaces]);\n\n    useEffect(() => {\n        interfaces.forEach(input => {\n            input.onmidimessage = e => {\n                const [command, note] = e.data;\n                const velocity = (e.data.length > 2) ? e.data[2] : 0;\n\n                // console.log(command, note, velocity);\n\n                const noteOn = () => commands$.next({note, velocity});\n                const noteOff = () => commands$.next({note, velocity: 0});\n\n                switch(command) {\n                    case 144:\n                        if(velocity > 0)\n                            noteOn();\n                        else\n                            noteOff();\n                        break;\n\n                    case 128:\n                        noteOff();\n                        break;\n                }\n            };\n        });\n    }, [commands$, interfaces]);\n\n    if(!error && interfaces.length <= 0)\n        return <></>;\n\n    if(error)\n        return <h2>MIDI error: {error}</h2>;\n\n    return (\n        <Box>\n            <h3>Midi connected</h3>\n            <h4>{man}: {name}</h4>\n        </Box>\n    );\n};","export const Bindings: {\n    [key: string]: number\n} = {\n    'r': 45,\n    'e': 43,\n    'w': 41,\n    'q': 40,\n    'a': 47,\n    's': 48,\n    'd': 49,\n    'f': 50,\n    'g': 51,\n    'h': 52,\n    'j': 53,\n    'k': 54,\n    'l': 55,\n    ';': 56,\n    '\\'': 57,\n    '\\\\': 58,\n};","import React, { useEffect } from 'react';\nimport { Bindings } from '../data/Bindings';\nimport { Subject } from 'rxjs';\nimport { Command } from './Channel';\n\ntype PianoProps = {\n    commands$: Subject<Command>\n};\n\nexport const Piano = ({ commands$ }: PianoProps) => {\n    useEffect(() => {\n        const onKeyDown = (e: KeyboardEvent) => {\n            if(e.repeat) return;\n            const note = Bindings[e.key.toLowerCase()];\n            if(!note) return;\n            console.log('Playing note', note);\n\n            commands$.next({\n                note,\n                velocity: 127\n            });\n        };\n\n        const onKeyUp = (e: KeyboardEvent) => {\n            const note = Bindings[e.key.toLowerCase()];\n            if(!note) return;\n\n            console.log('Releasing note', note);\n\n            commands$.next({\n                note,\n                velocity: 0\n            });\n        };\n\n        document.addEventListener('keydown', onKeyDown);\n        document.addEventListener('keyup', onKeyUp);\n        return () => {\n            document.removeEventListener('keydown', onKeyDown);\n            document.removeEventListener('keyup', onKeyUp);\n        }\n    }, [commands$]);\n\n    return (\n        <></>\n    );\n};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Command } from './Channel';\nimport { Subject, Subscription } from 'rxjs';\nimport { Box } from './style/Box';\nimport { Button } from './style/Geometry';\n\ninterface TrackCommand {\n    command: Command,\n    time: number\n}\n\ninterface TrackProps {\n    commands$: Subject<Command>\n}\n\nexport const Track = ({ commands$ }: TrackProps) => {\n    const [isRecording, setIsRecording] = useState<boolean>(false);\n    const [isPlaying, setIsPlaying] = useState<boolean>(false);\n    const recording = useRef<TrackCommand[]>([]);\n    const [subscription, setSubscription] = useState<Subscription>();\n\n    const [timeouts, setTimeouts] = useState<number[]>([]);\n\n    useEffect(() => {\n        \n    }, [commands$]);\n\n    const onRecord = useCallback(\n        (e: React.MouseEvent) => {\n            if(!isRecording) {\n                const time = Date.now();\n                recording.current = [];\n\n                const sub = commands$.subscribe(command => {\n                    recording.current.push({\n                        command,\n                        time: Date.now() - time\n                    });\n                });\n                setSubscription(sub);\n            } else {\n                subscription?.unsubscribe();\n                setSubscription(undefined);\n            }\n\n            setIsRecording(v => !v);\n        },\n        [setIsRecording, isRecording, setSubscription, commands$, subscription]\n    );\n\n    const onPlay = useCallback(\n        (e: React.MouseEvent) => {\n            setIsRecording(false);\n\n            if(!isPlaying) {\n                if(recording.current?.length <= 0) return;\n\n                const timeouts = [\n                    ...recording.current.map(({ time, command }) => setTimeout(() => {\n                        commands$.next(command);\n                    }, time)),\n                    setTimeout(() => { // last note\n                        setIsPlaying(false);\n                    }, recording.current[recording.current.length - 1].time)\n                ];\n\n                setTimeouts(timeouts);\n            } else {\n                timeouts.forEach(clearTimeout);\n            }\n\n            setIsPlaying(v => !v);\n        },\n        [setTimeouts, commands$, setIsRecording, timeouts, setIsPlaying, isPlaying]\n    );\n\n    let recordStyle = {};\n    if(isRecording) {\n        recordStyle = {\n            background: 'red'\n        };\n    }\n\n    return (\n        <Box>\n            <Button style={recordStyle} onClick={onRecord}>{isRecording ? 'Stop recording' : 'Record'}</Button>\n            <Button onClick={onPlay}>{isPlaying ? 'Stop playing' : 'Play'}</Button>\n        </Box>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Channel, Command } from './Channel';\nimport { FrequencyDisplay, WaveDisplay } from './Display';\nimport { Midi } from './Midi';\nimport { Subject } from 'rxjs';\nimport { Piano } from './Piano';\nimport { Row, Button } from './style/Geometry';\nimport { Track } from './Track';\n\ninterface DemoCanvasWidgetProps {\n\tcolor?: string;\n\tbackground?: string;\n\tchildren: React.ReactNode;\n};\n\ninterface ContainerProps {\n\tcolor: string;\n\tbackground: string\n};\n\nexport const Container = styled.div<ContainerProps>`\n\theight: 100%;\n\tbackground-color: ${p => p.background};\n\tbackground-size: 50px 50px;\n\tdisplay: flex;\n\talign-items: start;\n\tflex-wrap: wrap;\n\t> div {\n\t\tflex: 1 1 100%;\n\t}\n\t/* > * {\n\t\theight: 100%;\n\t\tmin-height: 100%;\n\t\twidth: 100%;\n\t} */\n\tbackground-image: linear-gradient(\n\t\t\t0deg,\n\t\t\ttransparent 24%,\n\t\t\t${p => p.color} 25%,\n\t\t\t${p => p.color} 26%,\n\t\t\ttransparent 27%,\n\t\t\ttransparent 74%,\n\t\t\t${p => p.color} 75%,\n\t\t\t${p => p.color} 76%,\n\t\t\ttransparent 77%,\n\t\t\ttransparent\n\t\t),\n\t\tlinear-gradient(\n\t\t\t90deg,\n\t\t\ttransparent 24%,\n\t\t\t${p => p.color} 25%,\n\t\t\t${p => p.color} 26%,\n\t\t\ttransparent 27%,\n\t\t\ttransparent 74%,\n\t\t\t${p => p.color} 75%,\n\t\t\t${p => p.color} 76%,\n\t\t\ttransparent 77%,\n\t\t\ttransparent\n\t\t);\n`;\n\nconst DemoCanvasWidget = (props: DemoCanvasWidgetProps) => (\n\t<Container\n\t\tbackground={props.background || 'rgb(60, 60, 60)'}\n\t\tcolor={props.color || 'rgba(255,255,255, 0.05)'}>\n\t\t{props.children}\n\t</Container>\n);\n\nconst StorageVersion = '1.3';\nconst StorageVersionKey = 'STORAGE_VERSION';\n\nexport const App = () => {\n\tconst [audio] = useState(new AudioContext());\n\tconst [analyser] = useState(audio.createAnalyser());\n\n\tuseEffect(() => {\n\t\tconst version = localStorage.getItem(StorageVersionKey);\n\t\tif(version !== StorageVersion) {\n\t\t\tconsole.log(`${version} != ${StorageVersion}, clearing localStorage`);\n\t\t\tlocalStorage.clear();\n\t\t}\n\n\t\tlocalStorage.setItem(StorageVersionKey, StorageVersion);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tanalyser.connect(audio.destination);\n\n\t\treturn () => analyser.disconnect(audio.destination);\n\t}, [audio, analyser]);\n\n\tconst [commands$] = useState<Subject<Command>>(new Subject<Command>());\n\n\treturn (\n\t\t<DemoCanvasWidget>\n\t\t\t<Row>\n\t\t\t\t<Button style={{margin: '20px 0 0 20px'}} onClick={() => { localStorage.clear(); window.location.reload(); }}>Reset</Button>\n\t\t\t\t<Piano commands$={commands$}></Piano>\n\t\t\t\t<Midi commands$={commands$}></Midi>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Track commands$={commands$}></Track>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<FrequencyDisplay audio={audio} out={analyser}></FrequencyDisplay>\n\t\t\t\t<WaveDisplay audio={audio} out={analyser}></WaveDisplay>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Channel audio={audio} commands$={commands$} out={analyser}></Channel>\n\t\t\t</Row>\n\t\t</DemoCanvasWidget>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}